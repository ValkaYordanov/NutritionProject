@model NutritionApp.Models.ViewModels.IntakeViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Intake</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="UserId" class="control-label"></label>
                <select asp-for="UserId" class="form-control" asp-items="ViewBag.UserId"></select>
            </div>


            <div class="form-group" id="searchFoodContainer">
                <label class="control-label">Search for food</label>
                <input  id="searchFoodsInput" class="form-control" onkeyup="searchForFoods(this.value)" autocomplete="off">
                <input asp-for="Type" type="hidden" name="type" value=""/>
                <input asp-for="ItemId" type="hidden" name="id"/>
                <div id="foodOptions">
                </div>
                <span class="text-danger"></span>
            </div>
          


            @*<div class="form-group">
                <label asp-for="MealId" class="control-label"></label>
                <select asp-for="MealId" class="form-control" asp-items="ViewBag.MealId"></select>
            </div>
            <div class="form-group">
                <label asp-for="ProductId" class="control-label"></label>
                <select asp-for="ProductId" class="form-control" asp-items="ViewBag.ProductId"></select>
            </div>*@
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Day" class="control-label"></label>
                <input asp-for="Day" class="form-control" />
                <span asp-validation-for="Day" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>

    function searchForFoods(input) {
       
        if (input !== "") {
            const path = "https://localhost:44351/Intakes/SelectFromSp?Input=";
            fetch(`${path}${input}`)
                .then(response => response.json())
                .then(data => {

                    console.log(data);
                    document.querySelector("#foodOptions").innerHTML = '';

                    data.productList.forEach(obj => addFoodOption(obj, 'product'))
                    data.mealList.forEach(obj => addFoodOption(obj, 'meal'))
                });


            
        }
    }

    function addFoodOption(food, type) {
        console.log(food);
       

       
        if (type == 'product') {
            console.log(food.productId);
            document.querySelector("#foodOptions").innerHTML += `
<p onclick="chooseFood(this, '${type}', ${food.productId});">${food.productName}</p>
`;
        }
        if (type == 'meal') {
            console.log(food.mealId);
            document.querySelector("#foodOptions").innerHTML += `
<p onclick="chooseFood(this, '${type}',${food.mealId});">${food.mealName}</p>
`;
        }

        
        
    }

    function chooseFood(food, addedType, foodId) {
        console.log(food);
        console.log(foodId);
        const searchFoodContainer = document.querySelector("#searchFoodContainer");
        const type = searchFoodContainer.querySelector("input[name='type']");
        const id = searchFoodContainer.querySelector("input[name='id']");

        // Save values

        type.value = addedType;
        id.value = +foodId;
        var num = +document.querySelector("#searchFoodContainer input[name='id']").value;
        id.value = num;
        parseInt(id.value);
        console.log("value", foodId, typeof foodId, "new value", id.value, typeof id.value, "num", num, typeof num);

        // Save value and Reset dropdown
        searchFoodsInput.value = food.innerHTML;
        foodOptions.innerHTML = '';

     
      

    }
</script>

<style>
    #foodOptions{
        background-color:lightblue;
    }
</style>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
